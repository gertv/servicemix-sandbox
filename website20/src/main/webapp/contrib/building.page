---
<% attributes("title") = "Building ServiceMix" %>
title: Building ServiceMix
--- name:content pipeline:markdown

# Building ServiceMix From Source

ServiceMix uses [Maven](http://maven.apache.org/) as its build and management tool. We have tested the build with Maven 2.0.8 and it works fine, but Maven 2.0.9 is known to cause some issues that prevent a successful build for ServiceMix 3.2.1 and previous versions.  This has been fixed for 3.2.2 and 3.3.

ServiceMix 4.x requires to use Maven 2.2.1 or better.

## Getting started

* Download and [install Maven](http://maven.apache.org/download.html#Installation).
* Get the latest code [from SVN](source.html).
* Build the code with the following command

        mvn -Dmaven.test.skip=true -Pstep1 install
        mvn -Dmaven.test.skip=true -Pstep2 install

<div class="tip">
  <h1>Useful Hints</h1>
  <ul>
	<l1>
      <p>It may happen, that building step1 fails with an error message regarding PMD or checkstyle. In this case you can add a <code>nochecks</code> to the line so it looks like this:</p>
      <code>mvn -Dmaven.test.skip=true -Pstep1,nochecks install</code>
    </li>
	<li>
      <p>Also, if an out of memory error is encountered during compilation, set the <code>MAVEN_OPTS</code> environment variable to a larger amount of memory. Below is an example:</p>
      <code>MAVEN_OPTS=-Xmx768m</code>
    </li>
	<LI>Some dependencies have POMs that specify repository URLs that are no longer valid. This can cause invalid artifacts to be downloaded to your local repository. You can add the following mirror to your Maven <code>settings.xml</code> file to avoid this problem:
<PRE class="code-java">
&lt;mirror&gt;
  &lt;id&gt;servicemix-repo&lt;/id&gt;
  &lt;name&gt;Apache ServiceMix Repository&lt;/name&gt;
  &lt;url&gt;http:<SPAN class="code-comment">//svn.apache.org/repos/asf/servicemix/m2-repo/&lt;/url&gt;
</SPAN>  &lt;mirrorOf&gt;servicemix-repo,servicemix-m2-repo&lt;/mirrorOf&gt;
&lt;/mirror&gt;
</PRE>
</li>
</ul>
</div>

<div class="warn">
  <h1>Please Note</h1>
  <p>There is an <a href="https://issues.apache.org/activemq/browse/SM-1079">issue</a> in building if you use the system property style of declaring the profiles (i.e., <code>-Dprofile=step2</code>) as the XFire Maven plugin thinks <code>step2</code> is a profile name it should use. This is fixed in the ServiceMix trunk (3.3 or greater). To work around this issue, try the following items below:</p>
  <UL>
	<LI>Use the -Pstep2 style of declaring the profile as noted above</LI>
	<LI>Comment out the <A href="http://fisheye6.atlassian.com/browse/servicemix/smx3/tags/servicemix-3.2.1/platforms/pom.xml?%3Dtrunk#l36" class="external-link" rel="nofollow">Geronimo module in the platform POM</A></LI>
  </UL>
</div>

Next time you build, you can just run

    mvn -Dmaven.test.skip=true install

<div class="tip">
  <h1>Building 3.1.1</h1>
  <p>If an out of memory error is encountered when building 3.1.1, setting the following environmental variable may help</P>
  <code>MAVEN_OPTS=-Xmx768m</code>
</div>

<div class="tip">
  <h1>Building 3.0-M1 and 3.0-M2</h1>
  <p>Note that this only works for versions from 3.0-M3.</p>
  <p>To build previous versions, you need to run:</p>
  <pre>mvn &#45;N install
cd tooling
mvn install &#45;Dmaven.test.skip=true
cd ..
mvn install &#45;Dmaven.test.skip=true</pre>
</div>

## Code Conventions

Checkstyle and PMD rules are used to scour the ServiceMix source code when performing a build. If you are hacking code and it does not follow these conventions, the build will fail. To make things easier on folks who are using Eclipse, there is an [Eclipse code convention profile](http://svn.apache.org/viewvc/servicemix/smx3/branches/servicemix-3.2/build/src/main/resources/smx-eclipse-code-conventions.xml?view=markup) that matches the Checkstyle conventions, making things a bit easier in this regard. Import this profile into Eclipse under **Preferences-&gt;Java-&gt;Code Style-&gt;Formatter-&gt;Import**.

## Using an IDE

### Using Eclipse
For [Eclipse](http://www.eclipse.org/), a detailed description is given at [Importing ServiceMix into Eclipse](importing-servicemix-into-eclipse.html). In addition, this page also describes how to start ServiceMix inside Eclipse with all debugging possibilities.

### Other IDEs

Any modern IDE with self respect can start a new project based on a Maven `pom.xml` file.

Note that you may need to build the whole ServiceMix project once using maven.

Please refer to the [Maven plugin reference](http://maven.apache.org/plugins/index.html) for more details on using them.